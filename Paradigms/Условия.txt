Домашнее задание 1. Хэширование
Разработайте Java-программу CalcMD5, которая подсчитывает MD5-хэши файлов.
Программа должна принимать один аргумент командной строки — имя файла, в котором содержатся имена файлов, для которых требуется подсчитать хэши. Файлы перечислены по одному на строке.
Программа должна выдать на стандартный вывод MD5-хэши файлов в порядке их перечисления во входном файле. Хэши должны выдаваться в виде 32-значных шестнадцатеричных чисел.
Например, если файл input.txt содержит только input.txt (9 символов), то при запуске java CalcMD5 input.txt, на консоль должно быть выведено A8546347050ADC932FBEC189DC9FD50D.
Примечания.
Стандартная библиотека Java содержит реализацию алгоритма MD5.
Вы можете рассчитывать, что все файлы помещаются в память.
Можно написать решение, состоящее из четырех содержательных строк.
Тесты к домашним заданиям

Домашнее задание 2. Бинарный поиск
Реализуйте итеративный и рекурсивный варианты бинарного поиска в массиве.
На вход подается целое число x и массив целых чисел a, отсортированный по невозрастанию. Требуется найти минимальное значение индекса i, при котором a[i] <= x.
Для функций бинарного поиска и вспомогательных функций должны быть указаны, пред- и постусловия. Для реализаций методов должны быть приведены доказательства соблюдения контрактов в терминах троек Хоара.
Интерфейс программы.
Имя основного класса — BinarySearch.
Первый аргумент командной строки — число x.
Последующие аргументы командной строки — элементы массива a.
Пример запуска: java BinarySearch 3 5 4 3 2 1. Ожидаемый результат: 2.

Домашнее задание 3. Очередь на массиве
Найдите инвариант структуры данных «очередь». Определите функции, которые необходимы для реализации очереди. Найдите их пред- и постусловия.
Реализуйте классы, представляющие циклическую очередь с применением массива.
Класс ArrayQueueModule должен реализовывать один экземпляр очереди с использованием переменных класса.
Класс ArrayQueueADT должен реализовывать очередь в виде абстрактного типа данных (с явной передачей ссылки на экземпляр очереди).
Класс ArrayQueue должен реализовывать очередь в виде класса (с неявной передачей ссылки на экземпляр очереди).
Должны быть реализованы следующие функции (процедуры) / методы:
enqueue – добавить элемент в очередь;
element – первый элемент в очереди;
dequeue – удалить и вернуть первый элемент в очереди;
size – текущий размер очереди;
isEmpty – является ли очередь пустой;
clear – удалить все элементы из очереди.
Инвариант, пред- и постусловия записываются в исходном коде в виде комментариев.
Обратите внимание на инкапсуляцию данных и кода во всех трех реализациях.
Напишите тесты реализованным классам.

Домашнее задание 4. Очереди
Определите интерфейс очереди Queue и опишите его контракт.
Реализуйте класс LinkedQueue — очередь на связном списке.
Выделите общие части классов LinkedQueue и ArrayQueue в базовый класс AbstractQueue.

Домашнее задание 5. Вычисление выражений
Разработайте классы Const, Variable, Add, Subtract, Multiply, Divide для вычисления выражений с одной переменной.
Классы должны позволять составлять выражения вида
                new Subtract(
                    new Multiply(
                        new Const(2),
                        new Variable("x")
                    ),
                    new Const(3)
                ).evaluate(5)
            
При вычислении такого выражения вместо каждой переменной подставляется значение, переданное в качестве параметра методу evaluate (на данном этапе имена переменных игнорируются). Таким образом, результатом вычисления приведенного примера должно стать число 7.
Для тестирования программы должен быть создан класс Main, который вычисляет значение выражения x2?2x+1, для x, заданного в командной строке.
При выполнение задания следует обратить внимание на:
Выделение общего интерфейса создаваемых классов.
Выделение абстрактного базового класса для бинарных операций.


Домашнее задание 1. Хэширование
Домашнее задание 2. Бинарный поиск
Домашнее задание 3. Очередь на массиве
Домашнее задание 4. Очереди
Домашнее задание 5. Вычисление выражений